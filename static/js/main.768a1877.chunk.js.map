{"version":3,"sources":["Recipes.js","App.js","reportWebVitals.js","index.js"],"names":["Recipes","useState","recipess","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","console","log","rec","map","r","className","recipe","label","ingredients","ingre","text","src","image","onSubmit","e","preventDefault","type","value","onChange","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAyDeA,MAxDf,WAEI,IAFe,EAIeC,mBAAS,IAJxB,mBAIRC,EAJQ,KAICC,EAJD,OAKUF,mBAAS,IALnB,mBAKRG,EALQ,KAKDC,EALC,OAMQJ,mBAAS,WANjB,mBAMRK,EANQ,KAMFC,EANE,KAQfC,qBAAU,WACVC,MACE,CAACH,IAGH,IAAMG,EAAU,uCAAC,8BAAAC,EAAA,sEAEIC,MAAM,mCAAD,OAAoCL,EAApC,mBAbb,WAaa,oBAZZ,qCAUG,cAEXM,EAFW,gBAGCA,EAASC,OAHV,OAGXC,EAHW,OAIjBX,EAAWW,EAAKC,MAChBC,QAAQC,IAAIH,EAAKC,MALA,2CAAD,qDAeVG,EAAIhB,EAASiB,KAAI,SAAAC,GAAC,OAEnB,sBAAKC,UAAU,SAAf,UACG,oBAAIA,UAAU,QAAd,SAAuBD,EAAEE,OAAOC,QAEhC,oBAAIF,UAAU,cAAd,SACKD,EAAEE,OAAOE,YAAYL,KAAI,SAAAM,GAAK,OAC1B,6BAAKA,EAAMC,YAIpB,qBAAKL,UAAU,SAASM,IAAKP,EAAEE,OAAOM,cAI9C,OACI,gCACI,uBAAMP,UAAU,cAAcQ,SAvBnB,SAACC,GACpBA,EAAEC,iBACFxB,EAASH,GACTC,EAAU,KAoBF,UACA,uBAAOgB,UAAU,aAAaW,KAAK,OAAQC,MAAO7B,EAAQ8B,SAAU,SAAAJ,GAAC,OAAEzB,EAAUyB,EAAEK,OAAOF,UAC1F,wBAAQZ,UAAU,gBAAgBW,KAAK,SAAvC,wBAEA,qBAAKX,UAAU,YAAf,SACCH,Q,MCvCEkB,MARf,WACI,OACI,qBAAKf,UAAY,MAAjB,SACA,cAAC,EAAD,OCKOgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.768a1877.chunk.js","sourcesContent":["import React, {useEffect,useState} from 'react';\nfunction Recipes() {\n    \n    const APP_ID=\"df29c10f\";\n    const APP_KEY=\"af2776755f2fd3ef1f29fa93a86a8536\";\n    const [recipess,setRecipes] = useState([])\n    const [search,setSearch]=useState(\"\")\n    const [query,setQuery]=useState('chicken')\n    \n    useEffect(() => {\n    getRecipes();\n    },[query])\n    \n\n    const getRecipes=async()=>{\n\n    const response=await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    const data= await response.json();\n    setRecipes(data.hits);\n    console.log(data.hits);\n    \n}\n\n    const handleSubmit=(e)=>{\n    e.preventDefault();\n    setQuery(search);\n    setSearch('')\n}\n\n    const rec=recipess.map(r => \n    \n        (<div className=\"recipe\">\n            <h1 className=\"title\">{r.recipe.label}</h1>\n    \n            <ul className=\"ingredients\">\n                {r.recipe.ingredients.map(ingre =>\n                    (<li>{ingre.text}</li>)\n                )}\n            </ul>\n    \n            <img className=\"images\" src={r.recipe.image}/>\n    \n        </div>))\n    \n    return (\n        <div>\n            <form className=\"search-form\" onSubmit={handleSubmit}>\n            <input className=\"search-bar\" type=\"text\"  value={search} onChange={e=>setSearch(e.target.value)}/>\n            <button className=\"search-button\" type=\"submit\"> search</button>\n            </form>\n            <div className=\"container\">\n            {rec}\n            </div>\n            </div>\n            );\n        }\n\nexport default Recipes\n","import React from 'react';\nimport Recipes from './Recipes.js'\nimport './App.css';\n\nfunction App() {\n    return ( \n        <div className = \"App\">\n        <Recipes />\n        </div>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}